var x11 = require('../../lib');
x11.createClient(function(err, display) {
    var X = display.client;
    var root = display.screen[0].root;
    X.QueryTree(root, function(err, tree) {	
	tree.children.map(function(win) {
		try {
			X.InternAtom(false, '_NET_WM_STATE', function(wmStateErr, wmStateAtom) {
				X.InternAtom(false, '_NET_WM_STATE_SKIP_TASKBAR', function(wmSkipErr, wmSkipAtom) {
					X.InternAtom(false, '_NET_WM_NAME', function (wmNameErr, wmNameAtom) {
    						X.InternAtom(false, 'UTF8_STRING', function (utf8Err, utf8Atom) {
        						X.GetProperty(0, win, wmNameAtom, utf8Atom, 0, 10000000, function(nameErr, nameProp) {
								X.GetProperty(0, win, wmStateAtom, wmSkipAtom, function(stateErr, stateProp) {
									X.GetProperty(0, win, wmSkipAtom, X.atoms.INTEGER, function(skipErr, skipProp) {
										console.log(win, nameProp.data.toString(), skipProp, stateProp);
        									X.terminate();
									});
								});
							});
    						});
					});
				});
			});
		} catch(e) {
			 console.error(e); 
		}
	});    
    });
});
